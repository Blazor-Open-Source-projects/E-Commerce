@page "/orders"
@using E_CommerceBlazor.Client.Services.Abstract;
@using E_CommerceBlazor.Shared.Model;
@inject IOrderService _orderService

   

   

    <div class="container mt-4">
        <h1>User Orders</h1>
        <div class="row">
            <!-- Loop through user orders -->
           
                @foreach(var item in orders)
                {
                <div class="col-md-4 mb-4">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Order #1</h5>
                            <p class="card-text">Paid Price: @item.SubTotal</p>
                            <p class="card-text">Order Date: @item.CreatedDate</p>
                            <h6 class="card-subtitle mb-2 text-muted">Order Items:</h6>
                            <!-- Loop through order items for this order -->
                            @foreach (var orderItem in item.OrderItems)
                            {
                                <ul class="list-group">
                                    <li class="list-group-item">
                                        <!-- Order Item Photo -->
                                        <img src="/image/startup-plan-business-goals-diagram.jpg" class="img-thumbnail order-item-photo" alt="Order Item Photo">
                                        <div class="d-flex justify-content-between">
                                            <span>Product Name  @orderItem.Name</span>
                                            <span>Quantity:  @orderItem.Quantity</span>
                                        </div>
                                        <div class="d-flex justify-content-between">
                                            <span>Price: @orderItem.Price</span>
                                            <span>Total:  @orderItem.ProductItemPrice</span>    
                                        </div>
                                    </li>
                                <!-- Repeat for each order item -->
                                </ul>
                            }
                        </div>
                    </div>

            </div>
                }
             
            <!-- Repeat for each user order -->
        </div>
    </div>


@code {
    List<Order> orders = new List<Order>();
    bool orderNull { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        var result =await _orderService.GetAllOrdersByUser();
        Console.WriteLine(result.Data.Count);
        if(orders != null)
        {
            orders = result.Data;
        }
        
    }

}
